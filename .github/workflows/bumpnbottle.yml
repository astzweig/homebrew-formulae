name: Test and build bottle for chosen formula
run-name: Test and build bottles for ${{ inputs.formula }}

on:
  workflow_dispatch:
    inputs:
      formula:
        description: Formula name
        required: true

env:
  WORKFLOW_TAP_NAME: astzweig/formulae
  HOMEBREW_DEVELOPER: 1
  HOMEBREW_GITHUB_ACTIONS: 1
  HOMEBREW_NO_AUTO_UPDATE: 1
  HOMEBREW_NO_INSTALL_FROM_API: 1
  GIT_AUTHOR_NAME: ${{ secrets.HOMEBREW_FORMULAE_USERNAME }}
  GIT_AUTHOR_EMAIL: ${{ secrets.HOMEBREW_FORMULAE_EMAIL }}
  GIT_COMMITTER_NAME: ${{ secrets.HOMEBREW_FORMULAE_USERNAME }}
  GIT_COMMITTER_EMAIL: ${{ secrets.HOMEBREW_FORMULAE_EMAIL }}

jobs:
  bump-formula:
    permissions:
      contents: write 
    runs-on: macos-latest
    outputs:
      commit-sha: ${{ steps.commit-sha.outputs.GITHUB_SHA }}
    env:
      GITHUB_TOKEN: ${{ github.token }}
      HOMEBREW_GITHUB_API_TOKEN: ${{ github.token }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          core: false
          cask: false
          test-bot: false

      - name: Configure user and email
        working-directory: ${{steps.set-up-homebrew.outputs.repository-path}}
        run: |
          git config user.name "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"

      - name: Livecheck Formula
        id: brew-livecheck
        run: |
          brew lc -q --newer-only --tap "${{ env.WORKFLOW_TAP_NAME }}" --json "${{ inputs.formula }}" | \
          python3 -c 'import json;import sys;j=json.load(sys.stdin); exit(2) if len(j) != 1 else "";f=j[0];print("NEWVERSION="+f["version"]["latest"])' >> "$GITHUB_OUTPUT"

      - name: Bump Formula if necessary
        if: ${{ steps.brew-livecheck.outputs.NEWVERSION != '' }}
        run: |
          brew bump-formula-pr --write-only --commit --version ${{ steps.brew-livecheck.outputs.NEWVERSION }} ${{ inputs.formula}}

      - name: Push commits
        uses: Homebrew/actions/git-try-push@master
        with:
          token: ${{ github.token }}
          directory: ${{steps.set-up-homebrew.outputs.repository-path}}
          remote: origin
          branch: main
          tries: 3

      - id: commit-sha
        run: git log -1 --pretty="format:%H%n" | xargs printf "GITHUB_SHA=%s\n" >> "$GITHUB_OUTPUT"

  bottle:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, macos-14]
    runs-on: ${{matrix.os}}
    needs: bump-formula
    permissions:
      contents: read
    defaults:
      run:
        shell: /bin/bash -e {0}
        working-directory: ${{github.workspace}}
    env:
      GITHUB_TOKEN: ${{ github.token }}
      HOMEBREW_GITHUB_API_TOKEN: ${{ github.token }}
      BOTTLES_DIR: ${{ github.workspace }}/bottles
      GITHUB_SHA: ${{ needs.bump-formula.outputs.commit-sha }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          core: false
          cask: false
          test-bot: true

      - run: git pull origin main
      - run: mkdir -p "${BOTTLES_DIR}"


      - working-directory: ${{ env.BOTTLES_DIR }}
        run: |
          brew test-bot \
            --only-formulae \
            --keep-old \
            --only-json-tab \
            --skip-online-checks \
            --skip-dependents \
            "${{ inputs.formula }}"

      - name: Post-build steps
        if: always()
        uses: Homebrew/actions/post-build@master
        with:
          runner: ${{ matrix.os }}
          cleanup: false
          bottles-directory: ${{ env.BOTTLES_DIR }}
          logs-directory: ${{ env.BOTTLES_DIR }}/logs

  upload:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - bump-formula
      - bottle
    defaults:
      run:
        shell: bash
    env:
      HOMEBREW_SIMULATE_MACOS_ON_LINUX: 1
      GH_REPO: ${{github.repository}}
      GH_NO_UPDATE_NOTIFIER: 1
      GH_PROMPT_DISABLED: 1
      BOTTLES_DIR: ${{ github.workspace }}/bottles
      GITHUB_SHA: ${{ needs.bump-formula.outputs.commit-sha }}
      HOMEBREW_GITHUB_API_TOKEN: ${{ github.token }}
    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        with:
          core: false
          cask: false
          test-bot: false

      - run: git pull origin main

      - name: Download bottles from GitHub Actions
        uses: actions/download-artifact@v4
        with:
          pattern: bottles_*
          path: ${{ env.BOTTLES_DIR }}
          merge-multiple: true

      - name: Configure user and email
        working-directory: ${{steps.set-up-homebrew.outputs.repository-path}}
        run: |
          git config user.name "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"

      - name: Upload bottles to GitHub
        working-directory: ${{ env.BOTTLES_DIR }}
        run: |
          brew pr-upload --verbose --keep-old

      - name: Push commits
        uses: Homebrew/actions/git-try-push@master
        with:
          token: ${{ github.token }}
          directory: ${{steps.set-up-homebrew.outputs.repository-path}}
          branch: main
